language: c
matrix:
  include:
    - os: linux
      env: TEST_SUITE=testinstall CFLAGS="-fprofile-arcs -ftest-coverage" LDFLAGS="-fprofile-arcs"
      compiler: gcc
      addons:
        apt_packages:
          - libgmp-dev
      after_success:
          - bash <(curl -s https://codecov.io/bash)
    - os: linux
      env: TEST_SUITE=testtravis CFLAGS="-fprofile-arcs -ftest-coverage" LDFLAGS="-fprofile-arcs"
      compiler: gcc
      addons:
        apt_packages:
          - libgmp-dev
      after_success:
          - bash <(curl -s https://codecov.io/bash)
    - os: osx
      env: TEST_SUITE=testtravis CFLAGS="-fprofile-arcs -ftest-coverage" LDFLAGS="-fprofile-arcs"
      compiler: clang
      addons:
        apt_packages:
         - libgmp-dev
      after_success:
          - bash <(curl -s https://codecov.io/bash)
    - os: linux
      env: TEST_SUITE=testbugfix  CFLAGS="-fprofile-arcs -ftest-coverage" LDFLAGS="-fprofile-arcs"
      compiler: gcc
      addons:
        apt_packages:
         - libgmp-dev
      after_success:
          - bash <(curl -s https://codecov.io/bash)
    - os: linux
      env: TEST_SUITE=makemanuals
      compiler: gcc
      addons:
        apt_packages:
         - libgmp-dev
         - texlive-latex-base
         - texlive-latex-recommended
         - texlive-latex-extra
         - texlive-extra-utils
         - texlive-fonts-recommended
         - texlive-fonts-extra
    - os: linux
      env: TEST_SUITE=testtravis ABI=32
      compiler: gcc
      addons: 
        apt_packages:
          - libgmp-dev:i386
          - gcc-multilib
      after_success:
          - bash <(curl -s https://codecov.io/bash)

script:
  - ./configure --with-gmp=system
  - make
  - make bootstrap-pkg-full
  - if [[ x"$ABI" != "x32" ]] ; then cd pkg/io* ; ./configure ; make ; cd ../.. ; cd pkg/profiling* ; ./configure ; make ; cd ../.. ; fi
  - if [[ $TEST_SUITE = 'makemanuals' && $TRAVIS_OS_NAME = 'linux' ]]; then make manuals ; cat doc/*/make_manuals.out ; if [ `cat doc/*/make_manuals.out | grep -c "manual.lab written"` != '3' ]; then echo "Build failed"; exit 1; fi; fi
  - if [[ $TEST_SUITE != 'makemanuals' && x"$ABI" != "x32" ]]; then echo "Read(\"tst/${TEST_SUITE}.g\"); quit;" | sh bin/gap.sh --cover coverage | tee testlog.txt | grep --colour=always -E "########> Diff|$" ; echo "CoverToJson(\"coverage\", \"coverage.json\"); quit;" | sh bin/gap.sh etc/cover2json.g ; cd bin/x86* ; gcov -o . ../../src/* ; cd ../.. ; cat testlog.txt | tail -n 2 | grep "total"; ( ! grep "########> Diff" testlog.txt ) ; fi
  - if [[ $TEST_SUITE != 'makemanuals' && x"$ABI" = "x32" ]]; then echo "Read(\"tst/${TEST_SUITE}.g\"); quit;" | sh bin/gap.sh | tee testlog.txt | grep --colour=always -E "########> Diff|$" ; cat testlog.txt | tail -n 2 | grep "total"; ( ! grep "########> Diff" testlog.txt ) ; fi
  

